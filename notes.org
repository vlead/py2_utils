* Module import best practices

http://effbot.org/pyfaq/what-are-the-best-practices-for-using-import-in-a-module.htm

* Wf
#+BEGIN_EXAMPLE
CloneJob
#+END_EXAMPLE

#+BEGIN_EXAMPLE
t1 = Job(wd, repo, ws, target=git_install)
a1 = Succ(ws)  | Fail(msg)
r1 = Result(job = t1, src = git_install, status = "succ", ws = ...)


def exec(job):
   deps = j.deps
   results = empty
   for d in deps:
       r = exec(d)
	   add(r, results)
   ts = create new tasks
   r = j.target(ts)
   return r

   
def simple_exec(j):
    r = j.target(...)
    return r

	   
def driver(jobs, results):
   if empty(jobs):
       return results
   else: 
       j = pick(jobs)
       deps = j.deps
       
       f = j.target
       r = f(j)
       add(r, results)
    

If a job has dependencies:
 
       
def git_install(j):
    if (pred(j)):
	   j1 = Job(..., target=gitClone)
	   try:
          r1 = j1.do()
		  return Result(job=j, src=git_clone, status=succ, wd=...)
       except e
          status = fail
          exn = e
		  return Result(job=j, src=git_clone, status=fail, err=...)
    else:
       j1 = Job(..., target=gitPull)
	   r1 = j1.do()
    result = Result(job = j, src = git_clone,  status

#+END_EXAMPLE

